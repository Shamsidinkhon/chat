<?php

namespace Longman\TelegramBot\Commands\UserCommands;

use common\botHelpers\CommonHelper;
use common\models\BlockedUsers;
use common\models\BotUsersSearch;
use Longman\TelegramBot\Commands\UserCommand;
use Longman\TelegramBot\Entities\Keyboard;
use Longman\TelegramBot\Entities\KeyboardButton;
use Longman\TelegramBot\Request;
use Yii;

class BlockUserCommand extends UserCommand
{
    protected $name = 'blockUser';                      // Your command's name
    protected $description = 'A command for blockUser'; // Your command description
    protected $usage = '/blockUser';                    // Usage of your command
    protected $version = '1.0.0';                  // Version of your command

    public function execute()
    {
        $message = $this->getMessage();            // Get Message object

        $chat_id = $message->getChat()->getId();   // Get the current Chat ID

        $user = BotUsersSearch::findOne(['chat_id' => $chat_id]);

        if ($user && $user->current_partner_id) {
            $model = new BlockedUsers();
            $model->chat_id = $chat_id;
            $model->blocked_chat_id = $user->current_partner_id;
            $model->save();

            $puser = BotUsersSearch::findOne(['chat_id' => $model->blocked_chat_id]);
            $puser->current_partner_id = null;
            $puser->save();
            $data = [                                  // Set up the new message data
                'chat_id' => $puser->chat_id,                 // Set Chat ID to send the message to
                'text' => Yii::t('main', 'Your conversation partner has left')
            ];
            Request::sendMessage($data);

            $data = [                                  // Set up the new message data
                'chat_id' => $chat_id,                 // Set Chat ID to send the message to
                'text' => Yii::t('main', 'Blocked User')
            ];
            return Request::sendMessage($data);        // Send message!



        }

        $data = [                                  // Set up the new message data
            'chat_id' => $chat_id,                 // Set Chat ID to send the message to
            'text' => Yii::t('main', 'You have not conversation partner')
        ];

        return Request::sendMessage($data);        // Send message!
    }

    public function preExecute()
    {
        CommonHelper::initialize($this->update);
        return parent::preExecute(); // TODO: Change the autogenerated stub
    }
}